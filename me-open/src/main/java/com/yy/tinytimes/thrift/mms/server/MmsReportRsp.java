/**
 * Autogenerated by Thrift Compiler (0.9.1)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.yy.tinytimes.thrift.mms.server;

import org.apache.thrift.scheme.IScheme;
import org.apache.thrift.scheme.SchemeFactory;
import org.apache.thrift.scheme.StandardScheme;

import org.apache.thrift.scheme.TupleScheme;
import org.apache.thrift.protocol.TTupleProtocol;
import org.apache.thrift.protocol.TProtocolException;
import org.apache.thrift.EncodingUtils;
import org.apache.thrift.TException;
import org.apache.thrift.async.AsyncMethodCallback;
import org.apache.thrift.server.AbstractNonblockingServer.*;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.EnumMap;
import java.util.Set;
import java.util.HashSet;
import java.util.EnumSet;
import java.util.Collections;
import java.util.BitSet;
import java.nio.ByteBuffer;
import java.util.Arrays;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

/**
 * 监控/举报信息响应
 */
public class MmsReportRsp implements org.apache.thrift.TBase<MmsReportRsp, MmsReportRsp._Fields>, java.io.Serializable, Cloneable, Comparable<MmsReportRsp> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("MmsReportRsp");

  private static final org.apache.thrift.protocol.TField CODE_FIELD_DESC = new org.apache.thrift.protocol.TField("code", org.apache.thrift.protocol.TType.I32, (short)1);
  private static final org.apache.thrift.protocol.TField MSG_FIELD_DESC = new org.apache.thrift.protocol.TField("msg", org.apache.thrift.protocol.TType.STRING, (short)2);
  private static final org.apache.thrift.protocol.TField MMS_REPORT_RSP_RECS_FIELD_DESC = new org.apache.thrift.protocol.TField("mmsReportRspRecs", org.apache.thrift.protocol.TType.LIST, (short)3);

  private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
  static {
    schemes.put(StandardScheme.class, new MmsReportRspStandardSchemeFactory());
    schemes.put(TupleScheme.class, new MmsReportRspTupleSchemeFactory());
  }

  /**
   * 编码
   */
  public int code; // required
  /**
   * 反馈
   */
  public String msg; // required
  /**
   * 流水号
   */
  public List<MmsReportRspRec> mmsReportRspRecs; // required

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    /**
     * 编码
     */
    CODE((short)1, "code"),
    /**
     * 反馈
     */
    MSG((short)2, "msg"),
    /**
     * 流水号
     */
    MMS_REPORT_RSP_RECS((short)3, "mmsReportRspRecs");

    private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

    static {
      for (_Fields field : EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // CODE
          return CODE;
        case 2: // MSG
          return MSG;
        case 3: // MMS_REPORT_RSP_RECS
          return MMS_REPORT_RSP_RECS;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __CODE_ISSET_ID = 0;
  private byte __isset_bitfield = 0;
  public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.CODE, new org.apache.thrift.meta_data.FieldMetaData("code", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.MSG, new org.apache.thrift.meta_data.FieldMetaData("msg", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.MMS_REPORT_RSP_RECS, new org.apache.thrift.meta_data.FieldMetaData("mmsReportRspRecs", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
            new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, MmsReportRspRec.class))));
    metaDataMap = Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(MmsReportRsp.class, metaDataMap);
  }

  public MmsReportRsp() {
  }

  public MmsReportRsp(
    int code,
    String msg,
    List<MmsReportRspRec> mmsReportRspRecs)
  {
    this();
    this.code = code;
    setCodeIsSet(true);
    this.msg = msg;
    this.mmsReportRspRecs = mmsReportRspRecs;
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public MmsReportRsp(MmsReportRsp other) {
    __isset_bitfield = other.__isset_bitfield;
    this.code = other.code;
    if (other.isSetMsg()) {
      this.msg = other.msg;
    }
    if (other.isSetMmsReportRspRecs()) {
      List<MmsReportRspRec> __this__mmsReportRspRecs = new ArrayList<MmsReportRspRec>(other.mmsReportRspRecs.size());
      for (MmsReportRspRec other_element : other.mmsReportRspRecs) {
        __this__mmsReportRspRecs.add(new MmsReportRspRec(other_element));
      }
      this.mmsReportRspRecs = __this__mmsReportRspRecs;
    }
  }

  public MmsReportRsp deepCopy() {
    return new MmsReportRsp(this);
  }

  @Override
  public void clear() {
    setCodeIsSet(false);
    this.code = 0;
    this.msg = null;
    this.mmsReportRspRecs = null;
  }

  /**
   * 编码
   */
  public int getCode() {
    return this.code;
  }

  /**
   * 编码
   */
  public MmsReportRsp setCode(int code) {
    this.code = code;
    setCodeIsSet(true);
    return this;
  }

  public void unsetCode() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __CODE_ISSET_ID);
  }

  /** Returns true if field code is set (has been assigned a value) and false otherwise */
  public boolean isSetCode() {
    return EncodingUtils.testBit(__isset_bitfield, __CODE_ISSET_ID);
  }

  public void setCodeIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __CODE_ISSET_ID, value);
  }

  /**
   * 反馈
   */
  public String getMsg() {
    return this.msg;
  }

  /**
   * 反馈
   */
  public MmsReportRsp setMsg(String msg) {
    this.msg = msg;
    return this;
  }

  public void unsetMsg() {
    this.msg = null;
  }

  /** Returns true if field msg is set (has been assigned a value) and false otherwise */
  public boolean isSetMsg() {
    return this.msg != null;
  }

  public void setMsgIsSet(boolean value) {
    if (!value) {
      this.msg = null;
    }
  }

  public int getMmsReportRspRecsSize() {
    return (this.mmsReportRspRecs == null) ? 0 : this.mmsReportRspRecs.size();
  }

  public java.util.Iterator<MmsReportRspRec> getMmsReportRspRecsIterator() {
    return (this.mmsReportRspRecs == null) ? null : this.mmsReportRspRecs.iterator();
  }

  public void addToMmsReportRspRecs(MmsReportRspRec elem) {
    if (this.mmsReportRspRecs == null) {
      this.mmsReportRspRecs = new ArrayList<MmsReportRspRec>();
    }
    this.mmsReportRspRecs.add(elem);
  }

  /**
   * 流水号
   */
  public List<MmsReportRspRec> getMmsReportRspRecs() {
    return this.mmsReportRspRecs;
  }

  /**
   * 流水号
   */
  public MmsReportRsp setMmsReportRspRecs(List<MmsReportRspRec> mmsReportRspRecs) {
    this.mmsReportRspRecs = mmsReportRspRecs;
    return this;
  }

  public void unsetMmsReportRspRecs() {
    this.mmsReportRspRecs = null;
  }

  /** Returns true if field mmsReportRspRecs is set (has been assigned a value) and false otherwise */
  public boolean isSetMmsReportRspRecs() {
    return this.mmsReportRspRecs != null;
  }

  public void setMmsReportRspRecsIsSet(boolean value) {
    if (!value) {
      this.mmsReportRspRecs = null;
    }
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case CODE:
      if (value == null) {
        unsetCode();
      } else {
        setCode((Integer)value);
      }
      break;

    case MSG:
      if (value == null) {
        unsetMsg();
      } else {
        setMsg((String)value);
      }
      break;

    case MMS_REPORT_RSP_RECS:
      if (value == null) {
        unsetMmsReportRspRecs();
      } else {
        setMmsReportRspRecs((List<MmsReportRspRec>)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case CODE:
      return Integer.valueOf(getCode());

    case MSG:
      return getMsg();

    case MMS_REPORT_RSP_RECS:
      return getMmsReportRspRecs();

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case CODE:
      return isSetCode();
    case MSG:
      return isSetMsg();
    case MMS_REPORT_RSP_RECS:
      return isSetMmsReportRspRecs();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof MmsReportRsp)
      return this.equals((MmsReportRsp)that);
    return false;
  }

  public boolean equals(MmsReportRsp that) {
    if (that == null)
      return false;

    boolean this_present_code = true;
    boolean that_present_code = true;
    if (this_present_code || that_present_code) {
      if (!(this_present_code && that_present_code))
        return false;
      if (this.code != that.code)
        return false;
    }

    boolean this_present_msg = true && this.isSetMsg();
    boolean that_present_msg = true && that.isSetMsg();
    if (this_present_msg || that_present_msg) {
      if (!(this_present_msg && that_present_msg))
        return false;
      if (!this.msg.equals(that.msg))
        return false;
    }

    boolean this_present_mmsReportRspRecs = true && this.isSetMmsReportRspRecs();
    boolean that_present_mmsReportRspRecs = true && that.isSetMmsReportRspRecs();
    if (this_present_mmsReportRspRecs || that_present_mmsReportRspRecs) {
      if (!(this_present_mmsReportRspRecs && that_present_mmsReportRspRecs))
        return false;
      if (!this.mmsReportRspRecs.equals(that.mmsReportRspRecs))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    return 0;
  }

  @Override
  public int compareTo(MmsReportRsp other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = Boolean.valueOf(isSetCode()).compareTo(other.isSetCode());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCode()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.code, other.code);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetMsg()).compareTo(other.isSetMsg());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetMsg()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.msg, other.msg);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetMmsReportRspRecs()).compareTo(other.isSetMmsReportRspRecs());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetMmsReportRspRecs()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.mmsReportRspRecs, other.mmsReportRspRecs);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("MmsReportRsp(");
    boolean first = true;

    sb.append("code:");
    sb.append(this.code);
    first = false;
    if (!first) sb.append(", ");
    sb.append("msg:");
    if (this.msg == null) {
      sb.append("null");
    } else {
      sb.append(this.msg);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("mmsReportRspRecs:");
    if (this.mmsReportRspRecs == null) {
      sb.append("null");
    } else {
      sb.append(this.mmsReportRspRecs);
    }
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class MmsReportRspStandardSchemeFactory implements SchemeFactory {
    public MmsReportRspStandardScheme getScheme() {
      return new MmsReportRspStandardScheme();
    }
  }

  private static class MmsReportRspStandardScheme extends StandardScheme<MmsReportRsp> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, MmsReportRsp struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // CODE
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.code = iprot.readI32();
              struct.setCodeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // MSG
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.msg = iprot.readString();
              struct.setMsgIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // MMS_REPORT_RSP_RECS
            if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
              {
                org.apache.thrift.protocol.TList _list24 = iprot.readListBegin();
                struct.mmsReportRspRecs = new ArrayList<MmsReportRspRec>(_list24.size);
                for (int _i25 = 0; _i25 < _list24.size; ++_i25)
                {
                  MmsReportRspRec _elem26;
                  _elem26 = new MmsReportRspRec();
                  _elem26.read(iprot);
                  struct.mmsReportRspRecs.add(_elem26);
                }
                iprot.readListEnd();
              }
              struct.setMmsReportRspRecsIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, MmsReportRsp struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      oprot.writeFieldBegin(CODE_FIELD_DESC);
      oprot.writeI32(struct.code);
      oprot.writeFieldEnd();
      if (struct.msg != null) {
        oprot.writeFieldBegin(MSG_FIELD_DESC);
        oprot.writeString(struct.msg);
        oprot.writeFieldEnd();
      }
      if (struct.mmsReportRspRecs != null) {
        oprot.writeFieldBegin(MMS_REPORT_RSP_RECS_FIELD_DESC);
        {
          oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, struct.mmsReportRspRecs.size()));
          for (MmsReportRspRec _iter27 : struct.mmsReportRspRecs)
          {
            _iter27.write(oprot);
          }
          oprot.writeListEnd();
        }
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class MmsReportRspTupleSchemeFactory implements SchemeFactory {
    public MmsReportRspTupleScheme getScheme() {
      return new MmsReportRspTupleScheme();
    }
  }

  private static class MmsReportRspTupleScheme extends TupleScheme<MmsReportRsp> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, MmsReportRsp struct) throws org.apache.thrift.TException {
      TTupleProtocol oprot = (TTupleProtocol) prot;
      BitSet optionals = new BitSet();
      if (struct.isSetCode()) {
        optionals.set(0);
      }
      if (struct.isSetMsg()) {
        optionals.set(1);
      }
      if (struct.isSetMmsReportRspRecs()) {
        optionals.set(2);
      }
      oprot.writeBitSet(optionals, 3);
      if (struct.isSetCode()) {
        oprot.writeI32(struct.code);
      }
      if (struct.isSetMsg()) {
        oprot.writeString(struct.msg);
      }
      if (struct.isSetMmsReportRspRecs()) {
        {
          oprot.writeI32(struct.mmsReportRspRecs.size());
          for (MmsReportRspRec _iter28 : struct.mmsReportRspRecs)
          {
            _iter28.write(oprot);
          }
        }
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, MmsReportRsp struct) throws org.apache.thrift.TException {
      TTupleProtocol iprot = (TTupleProtocol) prot;
      BitSet incoming = iprot.readBitSet(3);
      if (incoming.get(0)) {
        struct.code = iprot.readI32();
        struct.setCodeIsSet(true);
      }
      if (incoming.get(1)) {
        struct.msg = iprot.readString();
        struct.setMsgIsSet(true);
      }
      if (incoming.get(2)) {
        {
          org.apache.thrift.protocol.TList _list29 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, iprot.readI32());
          struct.mmsReportRspRecs = new ArrayList<MmsReportRspRec>(_list29.size);
          for (int _i30 = 0; _i30 < _list29.size; ++_i30)
          {
            MmsReportRspRec _elem31;
            _elem31 = new MmsReportRspRec();
            _elem31.read(iprot);
            struct.mmsReportRspRecs.add(_elem31);
          }
        }
        struct.setMmsReportRspRecsIsSet(true);
      }
    }
  }

}

